// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  nickname String @unique
  password String

  Group         Group[]
  UserJoinGroup UserJoinGroup[]
  Record        Record[]
}

model Group {
  id          String   @id @default(uuid())
  name        String   @unique
  description String
  photoUrl    String
  tags        String
  goalRep     Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  likeCount   Int
  recordCount Int

  discordWebhookUrl String
  discordInviteUrl  String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  UserJoinGroup UserJoinGroup[]
  Record        Record[]
}

model UserJoinGroup {
  id String @id @default(uuid())

  group   Group  @relation(fields: [groupId], references: [id])
  groupId String
  user    User   @relation(fields: [userId], references: [id])
  userId  String

  @@unique([groupId, userId])
}

model Record {
  id           String   @id @default(uuid())
  exerciseType Exercise
  description  String
  time         Int
  distance     Float
  photos       String
  createdAt    DateTime @default(now())

  group   Group  @relation(fields: [groupId], references: [id])
  groupId String
  user    User   @relation(fields: [userId], references: [id])
  userId  String
}

enum Exercise {
  RUNNING
  SWIMMING
  CYCLING
}
