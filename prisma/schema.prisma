// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id   String   @id @default(uuid())
  nickname  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Group         Group[]
  userJoinGroup userJoinGroup[]
  Record        Record[]
}

model Group {
  group_id    String   @id @default(uuid())
  name        String   @unique
  description String
  imageUrl    String
  goalRep     Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  likeCount   Int
  recordCount Int

  discordWebhookUrl String
  discordInviteUrl  String

  user   User   @relation(fields: [userId], references: [user_id])
  userId String

  userJoinGroup userJoinGroup[]
  Record        Record[]
}

model userJoinGroup {
  ug_id     String   @id @default(uuid())
  joinedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  group   Group  @relation(fields: [groupId], references: [group_id])
  groupId String
  user    User   @relation(fields: [userId], references: [user_id])
  userId  String

  Record Record[]

  @@unique([groupId, userId])
}

model Record {
  record_id    String   @id @default(uuid())
  exerciseType Exercise
  description  String
  time         Int
  distance     Float
  createdAt    DateTime @default(now())

  userJoinGroup userJoinGroup @relation(fields: [ugId], references: [ug_id])
  ugId          String
  group         Group         @relation(fields: [groupId], references: [group_id])
  groupId       String
  user          User          @relation(fields: [userId], references: [user_id])
  userId        String

  RecordImage RecordImage[]
}

model RecordImage {
  imageId  String @id @default(uuid())
  imageUrl String

  recordId        Record @relation(fields: [recordRecord_id], references: [record_id])
  recordRecord_id String
}

model Tag {
  tag_id    String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Exercise {
  RUNNING
  SWIMMING
  CYCLING
}
